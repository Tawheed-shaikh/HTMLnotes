### Introduction to Web Development

Web development is all about creating websites and web applications that people can access through a browser like Google Chrome or Firefox. If you enjoy solving problems and being creative, web development can be a fun way to build things that people all over the world can see and use. Let's break down the basics:

#### 1. **What is a Website?**
A website is a collection of web pages that are linked together and accessible over the internet. Each webpage has information, images, videos, or other media.

#### 2. **How Does the Web Work?**
When you type a URL (like `www.google.com`) into a browser, you’re sending a request to a computer called a server. That server sends back the data (HTML, CSS, JavaScript) that makes up the webpage, and the browser displays it for you.

#### 3. **Languages of Web Development**
Web development primarily uses three languages to build websites:

- **HTML (HyperText Markup Language)**: This is the foundation of a webpage. It tells the browser what content to display and how to structure it (e.g., headings, paragraphs, lists). Think of it as the skeleton of the webpage.
  
- **CSS (Cascading Style Sheets)**: CSS controls how the webpage looks—its colors, fonts, layouts, etc. It’s like the skin and makeup of the webpage, making it look nice and visually appealing.
  
- **JavaScript**: This adds interactivity to a webpage. With JavaScript, you can make things move, update without refreshing, and respond to user actions like clicking a button.

#### 4. **Frontend vs Backend**
Web development is divided into two main parts:

- **Frontend**: This is the part of the website that users see and interact with. It includes HTML, CSS, and JavaScript. If you want to create cool user interfaces, you'd work on the frontend.
  
- **Backend**: This is what happens behind the scenes, like storing data or handling logins. Backend development involves working with a server and a database. You might use languages like Python, Java, or Node.js for this.

#### 5. **How Do Websites Stay on the Internet?**
Websites are hosted on servers. When you "host" a website, you're renting space on a server so that anyone can access your site from anywhere in the world. Companies like Bluehost or AWS offer web hosting services.

#### 6. **Web Development Tools**
As a coder, you’ll use a few tools to help you build websites:
  
- **Text Editors**: Tools like Visual Studio Code or Sublime Text where you write your code.
- **Browser Developer Tools**: Browsers have built-in tools (like Chrome DevTools) to help you debug and test your websites.
- **Version Control (Git)**: Helps you track changes in your code and collaborate with others.

#### 7. **Getting Started**
To start coding for the web, you just need a text editor and a browser. Here’s a small example of a basic webpage using HTML:

```html
<!DOCTYPE html>
<html>
<head>
  <title>My First Website</title>
  <style>
    h1 {
      color: blue;
    }
  </style>
</head>
<body>
  <h1>Hello, World!</h1>
  <p>This is my first webpage!</p>
</body>
</html>
```

When you save this as an `.html` file and open it in a browser, you’ll see "Hello, World!" displayed on the page.

#### 8. **Why Learn Web Development?**
- **Creativity**: You get to design and build your own websites.
- **Problem-solving**: You'll encounter and solve challenges with code.
- **Career Opportunities**: The internet is huge, and every business needs a website or a web app.


==============

### Basic HTML Structure & Tags

HTML (HyperText Markup Language) is the foundation of all websites. It uses **tags** to tell the browser how to display content. Here's a breakdown of the structure and common tags:

#### 1. **Basic HTML Structure**
```html
<!DOCTYPE html>
<html>
  <head>
    <title>Page Title</title>
  </head>
  <body>
    <h1>This is a Heading</h1>
    <p>This is a paragraph.</p>
  </body>
</html>
```

#### 2. **Main Tags in HTML**
- `<!DOCTYPE html>`: Declares the document type (HTML5 in this case).
- `<html>`: The root element that contains all HTML content.
- `<head>`: Contains metadata (information about the document, not visible to the user) like the title, styles, and links to external files.
- `<title>`: Sets the title of the webpage (shown in the browser tab).
- `<body>`: Contains the content that will be displayed on the page, such as text, images, and links.

#### 3. **Common HTML Tags**
- **Headings**: `<h1>` to `<h6>` define headings. `<h1>` is the largest, and `<h6>` is the smallest.
  ```html
  <h1>Main Heading</h1>
  <h2>Sub Heading</h2>
  ```

- **Paragraph**: `<p>` defines a paragraph.
  ```html
  <p>This is a paragraph of text.</p>
  ```

- **Links**: `<a>` defines a hyperlink.
  ```html
  <a href="https://example.com">Visit Example</a>
  ```

- **Images**: `<img>` embeds an image. It uses the `src` attribute to specify the image URL.
  ```html
  <img src="image.jpg" alt="Description of image">
  ```

- **Lists**: `<ul>` for unordered (bullet) lists, and `<ol>` for ordered (numbered) lists. Each item is wrapped in an `<li>` tag.
  ```html
  <ul>
    <li>Item 1</li>
    <li>Item 2</li>
  </ul>
  ```

- **Div and Span**: `<div>` is a block-level container, while `<span>` is an inline container for styling or organizing content.
  ```html
  <div>This is a block element.</div>
  <span>This is an inline element.</span>
  ```

#### 4. **Closing Tags**
Most tags come in pairs, with an opening and a closing tag:
```html
<h1>Heading</h1>
```
